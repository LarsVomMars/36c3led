#include <LEDMatrixDriver.hpp>

/**
 * DIN -> D7
 * CLK -> D5
 * CS -> D8
*/

const int LEDMATRIX_CS_PIN = D8;
// Amount of connected LED matrices
const int LEDMATRIX_SEGMENTS = 2;
const int LEDMATRIX_WIDTH = LEDMATRIX_SEGMENTS * 8;
LEDMatrixDriver lmd(LEDMATRIX_SEGMENTS, LEDMATRIX_CS_PIN);
// Text to scroll through
char text[] = "<Some random text>";
// Delay of the animations in ms
const int ANIM_DELAY = 40;

void setup() {
	lmd.setEnabled(true);
  // Lightlevel from 0 (lowest) to 10 (heighest) 
    lmd.setIntensity(2);
}

int x = 0;
int y = 0;

// Parts of Spleen font
byte font[105][8] = {
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x00},
	{0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x50, 0xF8, 0x50, 0x50, 0xF8, 0x50, 0x00},
	{0x20, 0x70, 0xA0, 0x60, 0x30, 0x30, 0xE0, 0x20},
	{0x10, 0x90, 0xA0, 0x20, 0x40, 0x50, 0x90, 0x80},
	{0x20, 0x50, 0x50, 0x60, 0xA0, 0x90, 0x68, 0x00},
	{0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x10, 0x20, 0x40, 0x40, 0x40, 0x40, 0x20, 0x10},
	{0x40, 0x20, 0x10, 0x10, 0x10, 0x10, 0x20, 0x40},
	{0x00, 0x00, 0x90, 0x60, 0xF0, 0x60, 0x90, 0x00},
	{0x00, 0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x40},
	{0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00},
	{0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x80, 0x80},
	{0x00, 0x60, 0x90, 0xB0, 0xD0, 0x90, 0x60, 0x00},
	{0x00, 0x20, 0x60, 0x20, 0x20, 0x20, 0x70, 0x00},
	{0x00, 0x60, 0x90, 0x10, 0x60, 0x80, 0xF0, 0x00},
	{0x00, 0x60, 0x90, 0x20, 0x10, 0x90, 0x60, 0x00},
	{0x00, 0x80, 0xA0, 0xA0, 0xF0, 0x20, 0x20, 0x00},
	{0x00, 0xF0, 0x80, 0xF0, 0x10, 0x10, 0xE0, 0x00},
	{0x00, 0x60, 0x80, 0xE0, 0x90, 0x90, 0x60, 0x00},
	{0x00, 0xF0, 0x90, 0x10, 0x20, 0x40, 0x40, 0x00},
	{0x00, 0x60, 0x90, 0x60, 0x90, 0x90, 0x60, 0x00},
	{0x00, 0x60, 0x90, 0x90, 0x70, 0x10, 0x60, 0x00},
	{0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00},
	{0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x20, 0x40},
	{0x00, 0x10, 0x20, 0x40, 0x40, 0x20, 0x10, 0x00},
	{0x00, 0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00},
	{0x00, 0x40, 0x20, 0x10, 0x10, 0x20, 0x40, 0x00},
	{0x60, 0x90, 0x10, 0x20, 0x40, 0x00, 0x40, 0x00},
	{0x00, 0x60, 0x90, 0xB0, 0xB0, 0x80, 0x70, 0x00},
	{0x00, 0x60, 0x90, 0x90, 0xF0, 0x90, 0x90, 0x00},
	{0x00, 0xE0, 0x90, 0xE0, 0x90, 0x90, 0xE0, 0x00},
	{0x00, 0x70, 0x80, 0x80, 0x80, 0x80, 0x70, 0x00},
	{0x00, 0xE0, 0x90, 0x90, 0x90, 0x90, 0xE0, 0x00},
	{0x00, 0x70, 0x80, 0xE0, 0x80, 0x80, 0x70, 0x00},
	{0x00, 0x70, 0x80, 0x80, 0xE0, 0x80, 0x80, 0x00},
	{0x00, 0x70, 0x80, 0xB0, 0x90, 0x90, 0x70, 0x00},
	{0x00, 0x90, 0x90, 0xF0, 0x90, 0x90, 0x90, 0x00},
	{0x00, 0x70, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00},
	{0x00, 0x70, 0x20, 0x20, 0x20, 0x20, 0xC0, 0x00},
	{0x00, 0x90, 0x90, 0xE0, 0x90, 0x90, 0x90, 0x00},
	{0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x70, 0x00},
	{0x00, 0x90, 0xF0, 0xF0, 0x90, 0x90, 0x90, 0x00},
	{0x00, 0x90, 0xD0, 0xD0, 0xB0, 0xB0, 0x90, 0x00},
	{0x00, 0x60, 0x90, 0x90, 0x90, 0x90, 0x60, 0x00},
	{0x00, 0xE0, 0x90, 0x90, 0xE0, 0x80, 0x80, 0x00},
	{0x00, 0x60, 0x90, 0x90, 0x90, 0x90, 0x60, 0x30},
	{0x00, 0xE0, 0x90, 0x90, 0xE0, 0x90, 0x90, 0x00},
	{0x00, 0x70, 0x80, 0x60, 0x10, 0x10, 0xE0, 0x00},
	{0x00, 0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00},
	{0x00, 0x90, 0x90, 0x90, 0x90, 0x90, 0x70, 0x00},
	{0x00, 0x90, 0x90, 0x90, 0x90, 0x60, 0x60, 0x00},
	{0x00, 0x90, 0x90, 0x90, 0xF0, 0xF0, 0x90, 0x00},
	{0x00, 0x90, 0x90, 0x60, 0x60, 0x90, 0x90, 0x00},
	{0x00, 0x90, 0x90, 0x90, 0x70, 0x10, 0xE0, 0x00},
	{0x00, 0xF0, 0x10, 0x20, 0x40, 0x80, 0xF0, 0x00},
	{0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x70},
	{0x80, 0x80, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10},
	{0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70},
	{0x00, 0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0},
	{0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x60, 0x10, 0x70, 0x90, 0x70, 0x00},
	{0x80, 0x80, 0xE0, 0x90, 0x90, 0x90, 0xE0, 0x00},
	{0x00, 0x00, 0x70, 0x80, 0x80, 0x80, 0x70, 0x00},
	{0x10, 0x10, 0x70, 0x90, 0x90, 0x90, 0x70, 0x00},
	{0x00, 0x00, 0x70, 0x90, 0xF0, 0x80, 0x70, 0x00},
	{0x30, 0x40, 0x40, 0xE0, 0x40, 0x40, 0x40, 0x00},
	{0x00, 0x00, 0x70, 0x90, 0x90, 0x60, 0x10, 0xE0},
	{0x80, 0x80, 0xE0, 0x90, 0x90, 0x90, 0x90, 0x00},
	{0x00, 0x20, 0x00, 0x60, 0x20, 0x20, 0x30, 0x00},
	{0x00, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0xC0},
	{0x80, 0x80, 0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x00},
	{0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x30, 0x00},
	{0x00, 0x00, 0x90, 0xF0, 0xF0, 0x90, 0x90, 0x00},
	{0x00, 0x00, 0xE0, 0x90, 0x90, 0x90, 0x90, 0x00},
	{0x00, 0x00, 0x60, 0x90, 0x90, 0x90, 0x60, 0x00},
	{0x00, 0x00, 0xE0, 0x90, 0x90, 0xE0, 0x80, 0x80},
	{0x00, 0x00, 0x70, 0x90, 0x90, 0x70, 0x10, 0x10},
	{0x00, 0x00, 0x70, 0x90, 0x80, 0x80, 0x80, 0x00},
	{0x00, 0x00, 0x70, 0x80, 0x60, 0x10, 0xE0, 0x00},
	{0x40, 0x40, 0xE0, 0x40, 0x40, 0x40, 0x30, 0x00},
	{0x00, 0x00, 0x90, 0x90, 0x90, 0x90, 0x70, 0x00},
	{0x00, 0x00, 0x90, 0x90, 0x90, 0x60, 0x60, 0x00},
	{0x00, 0x00, 0x90, 0x90, 0xF0, 0xF0, 0x90, 0x00},
	{0x00, 0x00, 0x90, 0x60, 0x60, 0x90, 0x90, 0x00},
	{0x00, 0x00, 0x90, 0x90, 0x90, 0x70, 0x10, 0xE0},
	{0x00, 0x00, 0xF0, 0x10, 0x20, 0x40, 0xF0, 0x00},
	{0x30, 0x40, 0x40, 0xC0, 0xC0, 0x40, 0x40, 0x30},
	{0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00},
	{0xC0, 0x20, 0x20, 0x30, 0x30, 0x20, 0x20, 0xC0},
	{0x00, 0x48, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00}
};

void loop()
{
	int len = strlen(text);
	drawString(text, len, x, 0);
	lmd.display();
	delay(ANIM_DELAY);
	if (--x < len * -5) x = LEDMATRIX_WIDTH;
}


/**
 * Draws sting to position
*/
void drawString(char* text, int len, int x, int y)
{
	for (int idx = 0; idx < len; idx++)
	{
		int c = text[idx] - 32;
		if (x + idx * 5 > LEDMATRIX_WIDTH) return;
		if (5 + x + idx * 5 > 0) drawSprite(font[c], x + idx * 5, y, 5, 8);
	}
}

/**
 * Draws sprite of the position
*/
void drawSprite(byte* sprite, int x, int y, int width, int height)
{
	byte mask = B10000000;
	for (int iy = 0; iy < height; iy++)
	{
		for (int ix = 0; ix < width; ix++)
		{
			lmd.setPixel(x + ix, y + iy, (bool) (sprite[iy] & mask));
			mask = mask >> 1;
		}
		mask = B10000000;
	}
}
